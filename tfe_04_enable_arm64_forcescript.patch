diff --git a/CMakeLists.txt b/CMakeLists.txt
index 919dd4c5..e32fd9a2 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -12,6 +12,7 @@ endif()
 project(TheForceEngine
 	HOMEPAGE_URL "https://theforceengine.github.io"
 	DESCRIPTION "Modern 'Jedi Engine' replacement supporting Dark Forces, mods, and in the future Outlaws."
+	LANGUAGES C CXX ASM
 	)
 
 set(CMAKE_CXX_STANDARD 14)
diff --git a/TheForceEngine/TFE_ForceScript/CMakeLists.txt b/TheForceEngine/TFE_ForceScript/CMakeLists.txt
index 236b2795..d7b7cbf0 100644
--- a/TheForceEngine/TFE_ForceScript/CMakeLists.txt
+++ b/TheForceEngine/TFE_ForceScript/CMakeLists.txt
@@ -1,36 +1,14 @@
 file(GLOB_RECURSE SOURCES "*.cpp" "*.c")
 
+set(ARCHFLAGS "${CMAKE_SYSTEM_PROCESSOR}")
+if(${ARCHFLAGS} MATCHES "^aarch64")
+ if(CMAKE_ASM_COMPILER_WORKS)
+   set(SOURCES
+            TheForceEngine/TFE_ForceScript/Angelscript/angelscript/source/as_callfunc_arm64_gcc.S
+            TheForceEngine/TFE_ForceScript/Angelscript/angelscript/source/as_callfunc_arm64.cpp
+   )
+ else()
+   message(FATAL ERROR "ARM target requires a working assembler")
+ endif()
+endif()
 target_sources(tfe PRIVATE ${SOURCES})
-
-# Add support for ARM calling conventions.
-# Uncomment after testing on ARM.
-
-#set(ARCHFLAGS "${CMAKE_SYSTEM_PROCESSOR}")
-#if (APPLE AND NOT IOS)
-#  if (${CMAKE_SYSTEM_PROCESSOR} MATCHES "arm")
-#    set(ARCHFLAGS "aarch64")
-#  endif ()
-#endif ()
-
-#if(${ARCHFLAGS} MATCHES "^arm")
-#    enable_language(ASM)
-#    if(CMAKE_ASM_COMPILER_WORKS)
-#        set(SOURCES Angelscript/angelscript/source/as_callfunc_arm.cpp Angelscript/angelscript/source/as_callfunc_arm_gcc.S)
-#        set_property(SOURCE Angelscript/angelscript/source/as_callfunc_arm_gcc.S APPEND PROPERTY COMPILE_FLAGS " -Wa,-mimplicit-it=always")
-#    else()
-#        message(FATAL ERROR "ARM target requires a working assembler")
-#    endif()
-#endif()
-
-#if(${ARCHFLAGS} MATCHES "^aarch64")
-#    enable_language(ASM)
-#    if(CMAKE_ASM_COMPILER_WORKS)
-#        if(NOT APPLE)
-#            set(SOURCES Angelscript/angelscript/source/as_callfunc_arm64.cpp Angelscript/angelscript/source/as_callfunc_arm64_gcc.S)
-#        else()
-#            set(SOURCES Angelscript/angelscript/source/as_callfunc_arm64.cpp Angelscript/angelscript/source/as_callfunc_arm64_xcode.S)
-#        endif()
-#    else()
-#        message(FATAL ERROR "ARM target requires a working assembler")
-#    endif()
-#endif()
